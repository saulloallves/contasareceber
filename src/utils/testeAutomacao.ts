import { automacaoNotificacaoService } from '../services/automacaoNotificacaoService';

/**
 * Fun√ß√£o de teste para verificar a cobran√ßa espec√≠fica mencionada
 */
export async function testarCobrancaEspecifica() {
  console.log('üß™ Testando cobran√ßa espec√≠fica: 264c35d4-8bce-4bd6-b750-8f5977ff178b');
  console.log('üìã CNPJ: 60164763000108 - VILA PRUDENTE - S√ÉO PAULO / SP');
  console.log('üë• Esperado: Fabiana Abreu Frateschi de Freitas Lopes (principal)');
  console.log('---');
  
  try {
    // Executa verifica√ß√£o completa
    const resultado = await automacaoNotificacaoService.verificarCobrancasParaNotificacao();
    
    // Procura pela cobran√ßa espec√≠fica
    const cobrancaEspecifica = resultado.find(c => c.id === '264c35d4-8bce-4bd6-b750-8f5977ff178b');
    
    if (cobrancaEspecifica) {
      console.log('‚úÖ Cobran√ßa encontrada!');
      console.log('üìä Dados da cobran√ßa:');
      console.log('   - Cliente:', cobrancaEspecifica.cliente);
      console.log('   - CNPJ:', cobrancaEspecifica.cnpj);
      console.log('   - Dias desde cria√ß√£o:', cobrancaEspecifica.dias_desde_criacao);
      console.log('   - Pr√≥ximo marco:', cobrancaEspecifica.proximo_marco);
      console.log('   - Deve notificar WhatsApp:', cobrancaEspecifica.deve_notificar_whatsapp);
      console.log('   - Deve notificar Email:', cobrancaEspecifica.deve_notificar_email);
      console.log('');
      
      // Mostra dados do franqueado se encontrados
      if (cobrancaEspecifica.franqueado_principal) {
        console.log('‚úÖ Franqueado principal encontrado:');
        console.log('   - Nome:', cobrancaEspecifica.franqueado_principal.nome_completo);
        console.log('   - Email:', cobrancaEspecifica.franqueado_principal.email);
        console.log('   - Telefone:', cobrancaEspecifica.franqueado_principal.telefone);
        
        // Verifica se √© a Fabiana
        if (cobrancaEspecifica.franqueado_principal.nome_completo.includes('FABIANA')) {
          console.log('üéØ SUCESSO: Franqueado correto (Fabiana) foi encontrado!');
        } else {
          console.log('‚ö†Ô∏è ATEN√á√ÉO: Franqueado diferente do esperado!');
          console.log('   Esperado: Fabiana Abreu Frateschi de Freitas Lopes');
          console.log('   Encontrado:', cobrancaEspecifica.franqueado_principal.nome_completo);
        }
      } else {
        console.log('‚ùå Franqueado principal N√ÉO encontrado');
      }
      console.log('');
      
      // Mostra dados da unidade se encontrados
      if (cobrancaEspecifica.unidade) {
        console.log('‚úÖ Dados da unidade encontrados:');
        console.log('   - Nome:', cobrancaEspecifica.unidade.nome_unidade);
        console.log('   - C√≥digo:', cobrancaEspecifica.unidade.codigo_unidade);
        console.log('   - ID:', cobrancaEspecifica.unidade.id);
        
        // Verifica se √© Vila Prudente
        if (cobrancaEspecifica.unidade.nome_unidade.includes('VILA PRUDENTE')) {
          console.log('üéØ SUCESSO: Unidade Vila Prudente encontrada!');
        }
      } else {
        console.log('‚ùå Dados da unidade N√ÉO encontrados');
      }
      console.log('');
      
      // Gera exemplo de mensagem se precisar notificar
      if (cobrancaEspecifica.deve_notificar_whatsapp && cobrancaEspecifica.proximo_marco) {
        console.log('üì± Exemplo de mensagem WhatsApp:');
        console.log('==========================================');
        const mensagem = await automacaoNotificacaoService.gerarMensagemWhatsApp(
          cobrancaEspecifica, 
          cobrancaEspecifica.proximo_marco
        );
        console.log(mensagem);
        console.log('==========================================');
      }
      
    } else {
      console.log('‚ùå Cobran√ßa espec√≠fica n√£o encontrada ou n√£o precisa de notifica√ß√£o');
      console.log(`üìä Total de cobran√ßas encontradas: ${resultado.length}`);
      
      // Busca por cobran√ßas da Vila Prudente para debug
      const cobrancasVilaPrudente = resultado.filter(c => 
        c.cliente.includes('VILA PRUDENTE') || c.cnpj === '60164763000108'
      );
      
      if (cobrancasVilaPrudente.length > 0) {
        console.log('üîç Outras cobran√ßas da Vila Prudente encontradas:');
        cobrancasVilaPrudente.forEach((c, i) => {
          console.log(`${i + 1}. ${c.cliente} (${c.id})`);
          console.log(`   - CNPJ: ${c.cnpj}`);
          console.log(`   - Dias: ${c.dias_desde_criacao}`);
          console.log(`   - Marco: ${c.proximo_marco}`);
          console.log(`   - Franqueado: ${c.franqueado_principal?.nome_completo || 'N√£o encontrado'}`);
        });
      }
      
      // Lista as primeiras 3 cobran√ßas para refer√™ncia
      if (resultado.length > 0) {
        console.log('üîç Primeiras cobran√ßas encontradas:');
        resultado.slice(0, 3).forEach((c, i) => {
          console.log(`${i + 1}. ${c.cliente} (${c.id}) - ${c.dias_desde_criacao} dias`);
        });
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  }
}

// Declare global interface
declare global {
  interface Window {
    testarCobrancaEspecifica: typeof testarCobrancaEspecifica;
  }
}

// Fun√ß√£o para testar diretamente no browser console
(window as Window).testarCobrancaEspecifica = testarCobrancaEspecifica;
